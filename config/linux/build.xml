<project name="lwjgl native code" basedir="../.." default="compile-native-linux">
	<import file="../build-definitions.xml"/>

	<property name="system_libs" value="-lm -lpthread -lX11 -lGL -lXi -lXrandr -lXxf86vm"/>

	<condition
		property="libs"
		value
			="-L/usr/X11R6/lib -L/usr/X11/lib ${system_libs} -L${java.home}/lib/i386"
		else
			="-L/usr/X11R6/lib64 -L/usr/X11/lib64 ${system_libs} -L${java.home}/lib/amd64"
		>
		<equals arg1="${os.arch}" arg2="x86"/>
	</condition>

	<condition property="libname" value="liblwjgl.so" else="liblwjgl64.so">
		<equals arg1="${os.arch}" arg2="x86"/>
	</condition>

	<patternset id="link-objects">
		<include name="${bin.native}/*.o"/>
		<include name="${lib}/linux/${os.arch}/*.a"/>
	</patternset>

	<target name="-link" unless="link-uptodate">
		<apply dir="${bin.native}" executable="gcc" failonerror="true" parallel="true" verbose="true" taskname="Linker">
			<srcfile/>
			<arg line="-shared -O3 -fPIC -Wall -Wunused -pthread -o ${libname} ${libs}"/>
			<fileset dir=".">
				<patternset refid="link-objects"/>
			</fileset>
		</apply>
		<apply dir="${bin.native}" executable="strip" failonerror="true" taskname="Symbol strip">
			<fileset file="${libname}"/>
		</apply>
	</target>

	<target name="compile-native-linux">
		<!-- COMPILE -->
		<apply dir="${bin.native}" executable="gcc" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler">
			<arg line="-c -std=c99 -O3 -fPIC -Wall -Wunused -pthread -D_XOPEN_SOURCE=600 -DLWJGL_LINUX"/>
			<arg value="-I${java.home}/../include"/>
			<arg value="-I${java.home}/../include/linux"/>

			<!-- Paths relative to dir -->
			<arg value="-I${src.native.abs}/system"/>
			<arg value="-I${src.native.abs}/system/linux"/>
			<arg value="-I${src.native.abs}/system/glfw"/>
			<arg value="-I${src.native.abs}/openal"/>
			<arg value="-I${src.native.abs}/opencl"/>
			<arg value="-I${src.native.abs}/opengl"/>
			<arg value="-I${src.native.abs}/opengl/glx"/>

			<!-- Paths relative to basedir -->
			<fileset dir="${src.native}/system" includes="*.c"/>
			<fileset dir="${src.native}/system/linux" includes="*.c"/>
			<fileset dir="${src.native}/system/glfw" includes="*.c"/>
			<fileset dir="${src.native}/opencl" includes="*.c"/>
			<fileset dir="${src.native}/opengl" includes="*.c"/>
			<fileset dir="${generated.native}/system" includes="*.c"/>
			<fileset dir="${generated.native}/system/glfw" includes="*.c"/>
			<fileset dir="${generated.native}/system/linux" includes="*.c"/>
			<fileset dir="${generated.native}/openal" includes="*.c"/>
			<fileset dir="${generated.native}/opencl" includes="*.c"/>
			<fileset dir="${generated.native}/opengl" includes="*.c"/>
			<fileset dir="${generated.native}/opengl/glx" includes="*.c"/>

			<globmapper from="*.c" to="*.o"/>
		</apply>

		<!-- LINK -->
		<uptodate property="link-uptodate" targetfile="${bin.native}/${libname}">
			<srcfiles dir=".">
				<patternset refid="link-objects"/>
			</srcfiles>
		</uptodate>

		<antcall target="-link"/>
	</target>

	<!-- Bump this to force dependencies to be updated. -->
	<property name="revision" value="1"/>

	<target name="update-platform-dependencies">
		<update-dropbox name="OpenAL32" artifact="linux/libopenal.so" hash="i4zue33q7rs4d7k/s5QZB5Dz0Z" dest="${lib}"/>
		<update-dropbox name="OpenAL64" artifact="linux/libopenal64.so" hash="i4zue33q7rs4d7k/JT9CEwZjfk" dest="${lib}"/>
		<update-dropbox name="GLFW64" artifact="linux/amd64/libglfw3.a" hash="i4zue33q7rs4d7k/IU0VVtRN9v" dest="${lib}"/>
	</target>
</project>
