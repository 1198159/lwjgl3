<project name="lwjgl native code" basedir="../.." default="compile-native-macosx">
	<import file="../build-definitions.xml"/>

	<!--<condition property="libname" value="liblwjgl-i386.jnilib" else="liblwjgl-i86_64.jnilib">
		<equals arg1="${os.arch}" arg2="x86"/>
	</condition>-->

	<property name="libname" value="liblwjgl.jnilib"/>

	<!-- Ask Xcode for correct path to XCode tools -->
	<!-- Will fail if XCode Command Line Tools are not installed on 10.7+ (Lion) -->
	<exec executable="xcode-select" outputproperty="developer_path" errorproperty="xcode-error" failonerror="false" failifexecutionfails="false">
		<arg value="--print-path"/>
	</exec>
	<!-- Default to /Developer if xcode-select fails -->
	<condition property="developer_path" value="/Developer">
		<isset property="xcode-error"/>
	</condition>

	<property name="sdk_path" value="Platforms/MacOSX.platform/Developer/SDKs"/>
	<property name="jvm_headers_path" value="System/Library/Frameworks/JavaVM.framework/Versions/A/Headers"/>

	<!-- Choose a JavaVM.framework -->
	<condition property="javavmroot" value="${developer_path}/${sdk_path}/MacOSX10.9.sdk">
		<and>
			<not>
				<isset property="javavmroot"/>
			</not>
			<available file="${developer_path}/${sdk_path}/MacOSX10.9.sdk/${jvm_headers_path}" type="dir"/>
		</and>
	</condition>
	<condition property="javavmroot" value="${developer_path}/${sdk_path}/MacOSX10.8.sdk">
		<and>
			<not>
				<isset property="javavmroot"/>
			</not>
			<available file="${developer_path}/${sdk_path}/MacOSX10.8.sdk/${jvm_headers_path}" type="dir"/>
		</and>
	</condition>
	<condition property="javavmroot" value="${developer_path}/${sdk_path}/MacOSX10.7.sdk">
		<and>
			<not>
				<isset property="javavmroot"/>
			</not>
			<available file="${developer_path}/${sdk_path}/MacOSX10.7.sdk/${jvm_headers_path}" type="dir"/>
		</and>
	</condition>
	<condition property="javavmroot" value="">
		<and>
			<not>
				<isset property="javavmroot"/>
			</not>
			<available file="/${jvm_headers_path}" type="dir"/>
		</and>
	</condition>

	<!-- Choose a MacOSX SDK -->
	<condition property="sdkroot" value="${developer_path}/${sdk_path}/MacOSX10.9.sdk">
		<and>
			<not>
				<isset property="sdkroot"/>
			</not>
			<available file="${developer_path}/${sdk_path}/MacOSX10.9.sdk" type="dir"/>
		</and>
	</condition>
	<condition property="sdkroot" value="${developer_path}/${sdk_path}/MacOSX10.8.sdk">
		<and>
			<not>
				<isset property="sdkroot"/>
			</not>
			<available file="${developer_path}/${sdk_path}/MacOSX10.8.sdk" type="dir"/>
		</and>
	</condition>
	<condition property="sdkroot" value="${developer_path}/${sdk_path}/MacOSX10.7.sdk">
		<and>
			<not>
				<isset property="sdkroot"/>
			</not>
			<available file="${developer_path}/${sdk_path}/MacOSX10.7.sdk" type="dir"/>
		</and>
	</condition>

	<patternset id="link-objects">
		<include name="${bin.native}/*.o"/>
		<include name="${lib}/macosx/${os.arch}/*.a"/>
	</patternset>

	<property name="macosx-version-min" value="10.7"/>

	<target name="-link" unless="link-uptodate">
		<apply dir="${bin.native}" executable="gcc" failonerror="true" parallel="true" taskname="Linker">
			<srcfile/>
			<arg line='-dynamiclib -mmacosx-version-min=${macosx-version-min} -o ${libname}'/>
			<arg value="-framework"/><arg value="AppKit"/>
			<arg value="-framework"/><arg value="CoreFoundation"/>
			<arg value="-framework"/><arg value="Cocoa"/>
			<arg value="-framework"/><arg value="IOKit"/>
			<arg value="-framework"/><arg value="OpenGL"/>

			<fileset dir=".">
				<patternset refid="link-objects"/>
			</fileset>
		</apply>
		<!--<apply dir="${bin.native}" executable="strip" failonerror="true" taskname="Symbol Strip">
			<arg line="-S -X"/>
			<fileset file="${libname}"/>
		</apply>-->
	</target>

	<target name="compile-native-macosx">
		<echo message="${sdkroot}" taskname="SDK Root"/>
		<!-- COMPILE -->
		<property name="warnings" value="-Werror -Wfatal-errors -Wall -Wextra -pedantic -Wno-extended-offsetof"/>

		<apply dir="${bin.native}" executable="gcc" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler">
			<arg line="-c -std=c99 -O3 -fPIC ${warnings} -DLWJGL_MACOSX -isysroot ${sdkroot} -mmacosx-version-min=${macosx-version-min}"/>
			<arg value="-I${javavmroot}/${jvm_headers_path}"/>

			<!-- Paths relative to dir -->
			<arg value="-I${src.native.abs}/system"/>
			<arg value="-I${src.native.abs}/system/macosx"/>
			<arg value="-I${src.native.abs}/system/libffi"/>
			<arg value="-I${src.native.abs}/system/glfw"/>
			<arg value="-I${src.native.abs}/openal"/>
			<arg value="-I${src.native.abs}/opencl"/>
			<arg value="-I${src.native.abs}/opengl"/>

			<!-- Paths relative to basedir -->
			<fileset dir="${src.native}/system" includes="*.c"/>
			<fileset dir="${src.native}/system/macosx" includes="*.c"/>
			<fileset dir="${src.native}/system/macosx" includes="*.m"/>
			<fileset dir="${src.native}/system/libffi" includes="*.c"/>
			<fileset dir="${src.native}/system/glfw" includes="*.c"/>
			<fileset dir="${src.native}/opencl" includes="*.c"/>
			<fileset dir="${src.native}/opengl" includes="*.c"/>
			<fileset dir="${generated.native}/system" includes="*.c"/>
			<fileset dir="${generated.native}/system/macosx" includes="*.c"/>
			<fileset dir="${generated.native}/system/macosx" includes="*.m"/>
			<fileset dir="${generated.native}/system/libffi" includes="*.c"/>
			<fileset dir="${generated.native}/system/glfw" includes="*.c"/>
			<fileset dir="${generated.native}/openal" includes="*.c"/>
			<fileset dir="${generated.native}/opencl" includes="*.c"/>
			<fileset dir="${generated.native}/opengl" includes="*.c"/>

			<regexpmapper from="^(.*)\.(c|m)" to="\1.o"/>
		</apply>

		<!-- LINK -->
		<uptodate property="link-uptodate" targetfile="${bin.native}/${libname}">
			<srcfiles dir=".">
				<patternset refid="link-objects"/>
			</srcfiles>
		</uptodate>

		<antcall target="-link"/>
	</target>

	<!-- Bump this to force dependencies to be updated. -->
	<property name="revision" value="1"/>

	<target name="update-platform-dependencies">
		<mkdir dir="${lib}/macosx"/>
		<mkdir dir="${lib}/macosx/x86_64"/>

		<update-dropbox name="OpenAL" artifact="macosx/openal.dylib" hash="i4zue33q7rs4d7k/mjhxw_7sTN" dest="${lib}"/>
		<update-dropbox name="GLFW" artifact="macosx/x86_64/libglfw3.a" hash="i4zue33q7rs4d7k/TFDrKNsK9H" dest="${lib}"/>
		<update-dropbox name="libffi" artifact="macosx/x86_64/libffi.a" hash="i4zue33q7rs4d7k/1nhPKRljnB" dest="${lib}"/>
	</target>
</project>
