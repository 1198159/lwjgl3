<project name="LWJGL" basedir="." default="all">

	<property name="build.sysclasspath" value="ignore"/>

	<import file="config/build-definitions.xml"/>

	<!--<taskdef resource="org/jetbrains/jet/buildtools/ant/antlib.xml" classpath="${kotlinc}/kotlin-ant.jar"/>-->
	<taskdef resource="testngtasks" classpath="libs/testng.jar"/>

	<!-- Initialize build -->
	<target name="-initialize" description="Initializes the directories required by the build process.">
		<mkdir dir="${bin.core}"/>
		<mkdir dir="${bin.util}"/>
		<mkdir dir="${bin.templates}"/>
		<mkdir dir="${bin.tests}"/>
		<mkdir dir="${bin.native}"/>
	</target>

	<!-- Cleans up any files created during the execution of this script -->
	<target name="clean" description="Cleans all directories controlled by this ant script" depends="clean-java, clean-native, clean-generated">
		<delete dir="${bin}"/>
	</target>

	<target name="clean-generated" description="Cleans source files generated by this ant script" depends="clean-generated-java,clean-generated-native">
		<!-- We track the generated directory in a separate repo, so don't delete. -->
		<!--<delete dir="${generated}"/>-->
	</target>

	<!-- Cleans up any non-native files created during the execution of this script -->
	<target name="clean-java" description="Cleans non-native files generated by this ant script" depends="clean-generated-java">
		<!-- Delete java classes only to avoid unnecessary native recompilation -->
		<delete dir="${bin.core}"/>
		<delete dir="${bin.util}"/>
		<delete dir="${bin.templates}"/>
		<delete dir="${bin.tests}"/>
	</target>

	<target name="clean-generated-java" description="Cleans Java source files generated by this ant script">
		<delete dir="${generated.java}"/>
	</target>

	<!-- Useful when we need to force native recompilation -->
	<target name="clean-native" description="Cleans native binary files generated by this ant script">
		<delete dir="${bin.native}"/>
	</target>

	<target name="clean-generated-native" description="Cleans native source files generated by this ant script">
		<delete dir="${generated.native}"/>
	</target>

	<target name="all" depends="compile-templates,tests"/>

	<!-- Checks if the Kotlin compiler must be updated -->
	<target name="-kotlinc-update">
		<loadfile property="kotlinc-build-current" srcfile="${kotlinc}/build.txt" quiet="true" taskname="kotlinc"/>

		<condition property="kotlinc-uptodate">
			<and>
				<isset property="kotlinc-build-current"/>
				<equals arg1="${kotlinc-build-current}" arg2="${kotlinc-build}"/>
			</and>
		</condition>
	</target>

	<!-- Downloads and extracts the Kotlin compiler. -->
	<target name="-kotlinc-download" unless="kotlinc-uptodate">
		<local name="kotlinc-archive"/>
		<property name="kotlinc-archive" value="kotlin-compiler-${kotlinc-build}.zip"/>

		<!-- Delete current build -->
		<delete dir="${kotlinc}" taskname="kotlinc"/>
		<!-- Download new build -->
		<get src="http://teamcity.jetbrains.com/guestAuth/repository/download/bt345/${kotlinc-build}/${kotlinc-archive}" dest="${lib}" verbose="true" taskname="kotlinc"/>
		<!-- Extract build -->
		<unzip src="${lib}/${kotlinc-archive}" dest="${lib}" taskname="kotlinc"/>
		<!-- Delete build archive -->
		<delete file="${lib}/${kotlinc-archive}" taskname="kotlinc"/>

		<echo message="The Kotlin compiler was updated to build: ${kotlinc-build}" taskname="kotlinc"/>
	</target>

	<target name="compile-templates" description="Compiles the Templates module" depends="-initialize,-kotlinc-update,-kotlinc-download">
		<!-- Compile Java dependencies -->
		<javac debug="yes" destdir="${bin}/Templates" encoding="utf8" source="1.6" target="1.6" bootclasspathref="java6.boot.classpath" taskname="Java dependencies">
			<src path="${src.templates}"/>
			<include name="org/lwjgl/**"/>
		</javac>

		<!-- Compile Kotlin code -->
		<echo message="Compiling Kotlin templates. This will take several seconds..." level="info" taskname="Templates"/>
		<java
			classname="org.jetbrains.jet.cli.jvm.K2JVMCompiler"
			fork="true"
			failonerror="true"
			taskname="Templates"
			>
			<classpath>
				<pathelement path="${kotlinc}/lib/kotlin-compiler.jar"/>
			</classpath>

			<jvmarg value="-server"/>
			<jvmarg value="-Xms1024m"/>
			<jvmarg value="-Xverify:none"/>

			<arg value="-module"/>
			<arg value="config/Templates.kts"/>
			<arg value="-output"/>
			<arg value="${bin.templates}"/>
			<!--
			<arg value="-tags"/>
			<arg value="-verbose"/>
			<arg value="-version"/>
			-->
			<!--
			<arg value="-notNullAssertions"/>
			<arg value="-notNullParamAssertions"/>
			-->
			<arg value="-noStdlib"/>
			<arg value="-noJdkAnnotations"/>
			<!--<arg value="-noJdk"/>-->
		</java>
		<!--<kotlinc module="config/Templates.kts" jar="${lib}/templates.jar" />-->
	</target>

	<target name="formatter" description="Runs the template formatter tool" depends="-initialize"> <!-- Removed "compile-templates" until Kotlin adds support for incremental compilation -->
		<javac debug="yes" destdir="${bin.templates}" encoding="utf8" source="1.6" target="1.6" bootclasspathref="java6.boot.classpath">
			<src path="${src.templates}"/>
			<include name="org/lwjgl/**"/>
		</javac>

		<java
			classname="org.lwjgl.generator.util.TemplateFormatter"
			fork="true"
			spawn="true"
			>
			<classpath>
				<pathelement path="${bin.templates}"/>
				<pathelement path="${res}"/>
			</classpath>
		</java>
	</target>

	<target name="generate" description="Runs the code Generator"
	        depends="-initialize"> <!-- Removed "compile-templates" until Kotlin adds support for incremental compilation -->
		<java
			classname="org.lwjgl.generator.GeneratorPackage"
			fork="true"
			failonerror="true"
			taskname="Generator"
			>
			<classpath>
				<pathelement path="${bin.templates}"/>
				<pathelement path="${kotlinc}/lib/kotlin-runtime.jar"/>
			</classpath>

			<jvmarg value="-server"/>
		</java>
	</target>

	<target name="compile" description="Compiles the Java source code" depends="generate">
		<javac debug="yes" destdir="${bin.core}" encoding="utf8" source="1.6" target="1.6" bootclasspathref="java6.boot.classpath" taskname="Core">
			<src path="${src.core}"/>
			<src path="${src.util}/"/>
			<src path="${generated.java}"/>
			<classpath path="${lib}/disruptor.jar"/>
			<include name="org/lwjgl/**"/>
			<!-- Supresses internal API (e.g. Unsafe) usage warnings -->
			<compilerarg value="-XDignore.symbol.file=true"/>
		</javac>
	</target>

	<target name="compile-native" description="Compiles the native source code" depends="-initialize, compile">
		<ant antfile="config/${platform}/build.xml" inheritAll="false"/>
	</target>

	<target name="compile-tests" description="Compiles the LWJGL test suite" depends="compile">
		<javac debug="yes" destdir="${bin.tests}" encoding="utf8" source="1.6" target="1.6" bootclasspathref="java6.boot.classpath" taskname="Tests">
			<classpath>
				<pathelement path="${bin.core}"/>
				<pathelement path="${bin.util}"/>
				<pathelement path="${lib}/testng.jar"/>
			</classpath>

			<src path="${src.tests}/"/>
			<include name="org/lwjgl/**"/>
		</javac>
	</target>

	<target name="tests" description="Runs the LWJGL test suite" depends="compile-tests, compile-native">
		<testng outputDir="${tests.output}" taskname="Tests">
			<classpath>
				<pathelement path="${lib}/jcommander.jar"/>
				<pathelement path="${bin.core}"/>
				<pathelement path="${bin.util}"/>
				<pathelement path="${res}"/>
				<pathelement path="${bin.tests}"/>
			</classpath>
			<xmlfileset dir="config" includes="tests.xml,tests_${platform}.xml"/>
			<jvmarg value="-Xcheck:jni"/>
			<jvmarg value="-ea"/>
			<jvmarg value="-Dorg.lwjgl.util.Debug=true"/>
			<jvmarg value="-Djava.library.path=${lib.bin}"/>
		</testng>
	</target>

</project>
